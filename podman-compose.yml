version: "3.8"

services:
  reverse-proxy:
    image: docker.io/library/nginx:latest
    container_name: reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
    # Monta nosso template na pasta de templates do Nginx
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/default.conf.template:ro
    # Passa a variável para dentro do contêiner
    environment:
      - ZABBIX_HOSTNAME=${ZABBIX_HOSTNAME}
    depends_on:
      zabbix-web:
        condition: service_healthy
      grafana:
        condition: service_started

  prometheus:
    image: docker.io/prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://${ZABBIX_HOSTNAME}/prometheus'

  node-exporter:
    image: docker.io/prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'

  zabbix-mysql:
    image: docker.io/library/mysql:8.0
    container_name: zabbix-mysql
    restart: unless-stopped
    expose:
      - "3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_bin
      - --log-bin-trust-function-creators=1
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - zabbix-mysql-data:/var/lib/mysql

  zabbix-server:
    image: docker.io/zabbix/zabbix-server-mysql:7.4-alpine-latest
    container_name: zabbix-server
    restart: unless-stopped
    environment:
      DB_SERVER_HOST: zabbix-mysql
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      zabbix-mysql:
        condition: service_healthy
    ports:
      - "10051:10051"

  zabbix-web:
    image: docker.io/zabbix/zabbix-web-nginx-mysql:7.4-alpine-latest
    container_name: zabbix-web
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      ZBX_SERVER_HOST: zabbix-server
      DB_SERVER_HOST: zabbix-mysql
      MYSQL_DATABASE: zabbix
      MYSQL_USER: zabbix
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      PHP_TZ: America/Sao_Paulo
      ZBX_SERVER_NAME: ${ZABBIX_HOSTNAME}/zabbix
    depends_on:
      zabbix-server:
        condition: service_started
      zabbix-mysql:
        condition: service_healthy
    ports:
      - "8080:8080"

  zabbix-agent2:
    image: docker.io/zabbix/zabbix-agent2:7.4-alpine-latest
    container_name: zabbix-agent2
    restart: unless-stopped
    environment:
      ZBX_SERVER_HOST: zabbix-server
      HOSTNAME: Zabbix server
    depends_on:
      zabbix-server:
        condition: service_started

  grafana:
    image: docker.io/grafana/grafana-oss:11.1.0
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      GF_INSTALL_PLUGINS: alexanderzobnin-zabbix-app
      GF_SERVER_ROOT_URL: "http://${ZABBIX_HOSTNAME}/grafana"
    depends_on:
      zabbix-server:
        condition: service_started

volumes:
  zabbix-mysql-data:
  grafana-data:
  prometheus-data:
